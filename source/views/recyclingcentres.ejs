<!DOCTYPE html>
<html>
<head>
    <title>Recycling Centres</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link rel="stylesheet" href="/style/recycle1.css" > 


    <link href='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.css' rel='stylesheet' />
    <script src='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.js'></script>

    <link href="/css/mapbox-gl.css" rel="stylesheet">
<script type="text/javascript" src="/js/mapbox-gl.js"></script>
</head>
<body>
    <div class="ECOLUTION">
        <img src="/resources/PSD/ProjectSplash_Cropped.png" alt="Company Logo">
      </div>


      
      <div class="nav-bar">
        <!-- Hamburger Menu Icon Placeholder -->
        <div class="hamburger"></div> <!-- Ensure this is hidden initially -->
        <ul class="nav-links">
            <li><a href="/">Home</a></li>
            <li><a href="/ecoTravelRoutes">Travel</a></li>
            <li><a href="/recycle">Recycle</a></li>
            <li><a href="/setting">Settings</a></li>
           
        </ul>
    </div>
    
    <script>
document.addEventListener('DOMContentLoaded', function() {
    const navLinks = document.querySelector('.nav-links');
    const hamburger = document.querySelector('.hamburger'); // select the hamburger div

    // function to toggle nav links visibility
    function toggleNavLinks() {
        navLinks.style.display = navLinks.style.display === 'none' ? 'flex' : 'none';
    }

    //toggle nav links on click
    hamburger.addEventListener('click', toggleNavLinks);

    //adjust navLinks visibility based on window width
    function adjustNavLinksForWindowSize() {
        if (window.innerWidth > 1000) {
            navLinks.style.display = 'flex'; // Ensure nav-links are visible on wider screens
        } else if (!navLinks.style.display || navLinks.style.display === 'flex') {
            navLinks.style.display = 'none'; // Hide nav-links on smaller screens if not already toggled
        }
    }

    //listen for window resize events
    window.addEventListener('resize', adjustNavLinksForWindowSize);

    //initial adjustment in case the page loads in a narrow window
    adjustNavLinksForWindowSize();
});
    </script>


    <script>
    function copyAddressAndRedirect(button) {
        var address = document.querySelector('.address').innerText;
        navigator.clipboard.writeText(address).then(function() {
            alert('Address copied to clipboard: ' + address);
            // Properly encode the address and format it as a query parameter
            var encodedAddress = encodeURIComponent(address);
            window.location.href = "/ecoTravelRoutes?address=" + encodedAddress;
        }, function() {
            alert('Failed to copy address to clipboard.');
        });
    }
    </script>
    
    <div id="container">
        <div id="recyclingCentresList"></div>
        <div id="centreDetails">Select a recycling centre to view details.</div>
    </div>

   

    <!-- second commit -->

    <!-- search form for address, radius and count -->
    
    

    <script type="text/javascript">
        $(document).ready(function() {
            var userLat, userLng; // Define these outside the AJAX call to ensure wider scope
    
            // Convert postcode to coordinates
            var userPostcode = '<%= postcodePrefix %> <%= postcodeSuffix %>';
            $.get('/convert-postcode-to-coordinates', {postcode: userPostcode}, function(coords) {
                userLat = coords.latitude;
                userLng = coords.longitude;
    
                fetchRecyclingCentres();
            }).fail(function() {
                alert('Failed to get user location from postcode.');
            });
    
            function fetchRecyclingCentres() {
                $.ajax({
                    url: '/get-recycling-centres',
                    type: 'GET',
                    success: function(data) {
                        if(data && Array.isArray(data) && data.length > 0) {
                            displayRecyclingCentres(data);
                            // Immediately display the first centre's details and map
                            displayCentreDetailsAndMap(data[0]);
                        } else {
                            $('#recyclingCentresList').html('<p>No recycling centres found.</p>');
                        }
                    },
                    error: function(error) {
                        console.error('Error loading recycling centres:', error);
                        $('#recyclingCentresList').html('<p>Failed to load recycling centres. Please try again later.</p>');
                    }
                });
            }
    
            function displayRecyclingCentres(data) {
                var centresHTML = data.map(function(centre, index) {
                    return `<div class="centre-item" data-index="${index}" data-lat="${centre.latitude}" data-lng="${centre.longitude}" data-name="${centre.name}">
                                <h2>${centre.name}</h2>
                                <p>${centre.distance.toFixed(2)} miles</p>
                                <p>${centre.materials.length} materials accepted</p>
                            </div>`;
                }).join('');
                $('#recyclingCentresList').html(centresHTML);
    
                // Attach click event handlers to each centre item after they are displayed
                $('.centre-item').click(function() {
                    var index = $(this).data('index');
                    displayCentreDetailsAndMap(data[index]);
                });
            }
    
            function displayCentreDetailsAndMap(centre) {
                var detailsHTML = `
        <h2 class="distance">${centre.distance.toFixed(2)} miles away</h2>
        <h2 class="location-title">${centre.name}</h2>
        <p class="address">${centre.address}</p>
        <p>The following materials can be recycled at this place:</p>
        <p>Materials: ${centre.materials.join(', ')}</p>
        <button style="margin-top: 10px; font-family: 'SFProDisplay', sans-serif;" onclick="copyAddressAndRedirect(this)">Copy & Go to Map</button>
        <div id="mapPlaceholder"></div>`;
    $('#centreDetails').html(detailsHTML);
    
                // Assuming this function is correctly defined to show the map
                showMapPlaceholder(userLat, userLng, centre.latitude, centre.longitude, centre.name.replace(/'/g, "\\'"));
            }
    
            function showMapPlaceholder(userLat, userLng, centreLat, centreLng, centreName) {
                mapboxgl.accessToken = 'pk.eyJ1IjoicHJpbWFscmV4IiwiYSI6ImNscmFrbWg2cjBjbDUyaW13dmxjeG96bXoifQ.ktWyvNqeJ4awZ2pu__T1Xw';
                var map = new mapboxgl.Map({
                    container: 'mapPlaceholder', // Container ID
                    style: 'mapbox://styles/mapbox/dark-v10', // Style URL
                    center: [userLng, userLat], // Starting position [lng, lat]
                    zoom: 15, // Starting zoom
                    attributionControl: false // Disables the default attribution control, minimizes trademarks/logos
                });
    
                // If you want to show a custom attribution, you can add it using the AttributionControl
                map.addControl(new mapboxgl.AttributionControl({
                    compact: true
                }));
    
                map.on('load', function() {
                    var elUserLocation = document.createElement('div');
                    elUserLocation.style.backgroundColor = 'blue';
                    elUserLocation.style.color = 'white';
                    elUserLocation.style.padding = '5px';
                    elUserLocation.style.borderRadius = '5px';
                    elUserLocation.innerText = "You're here";
    
                    new mapboxgl.Marker(elUserLocation)
                        .setLngLat([userLng, userLat])
                        .addTo(map);
    
                    var elCentreLocation = document.createElement('div');
                    elCentreLocation.style.backgroundColor = 'green';
                    elCentreLocation.style.color = 'white';
                    elCentreLocation.style.padding = '5px';
                    elCentreLocation.style.borderRadius = '5px';
                    elCentreLocation.innerHTML = centreName;
    
                    new mapboxgl.Marker(elCentreLocation)
                        .setLngLat([centreLng, centreLat])
                        .addTo(map);
    
                    map.fitBounds([
                        [userLng, userLat], // Southwest coordinates
                        [centreLng, centreLat] // Northeast coordinates
                    ], {
                        padding: {top: 10, bottom:25, left: 15, right: 5}
                });
            });


            map.addControl(new mapboxgl.NavigationControl());
            $('.mapboxgl-ctrl-logo').hide();
        }
    });

</script>

</body>
</html>